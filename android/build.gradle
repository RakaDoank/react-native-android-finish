
buildscript {
	// Buildscript is evaluated before everything else so we can't use getExtOrDefault
	def kotlin_version = rootProject.ext.has("kotlinVersion") ? rootProject.ext.get("kotlinVersion") : project.properties["Module_kotlinVersion"]

	repositories {
		mavenCentral()
		google()
	}

	dependencies {
		classpath("com.android.tools.build:gradle:7.4.2")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version")
	}
}

def getExtOrDefault(name) {
	return rootProject.ext.has(name) ? rootProject.ext.get(name) : project.properties["Module_" + name]
}

// def getExtOrIntegerDefault(name) {
// 	return rootProject.ext.has(name) ? rootProject.ext.get(name) : (project.properties["Module_" + name]).toInteger()
// }

def isNewArchitectureEnabled() {
    // To opt-in for the New Architecture, you can either:
    // - Set `newArchEnabled` to true inside the `gradle.properties` file
    // - Invoke gradle with `-newArchEnabled=true`
    // - Set an environment variable `ORG_GRADLE_PROJECT_newArchEnabled=true`
    return rootProject.hasProperty("newArchEnabled") && rootProject.newArchEnabled == "true"
}

if (isNewArchitectureEnabled()) {
    apply plugin: "com.facebook.react"
}

apply plugin: "com.android.library"
apply plugin: "org.jetbrains.kotlin.android"

def kotlin_version = getExtOrDefault("kotlinVersion")
def javaPackageName = "com.audira.lib.reactnative.androidfinish"

android {
	def agpVersion = com.android.Version.ANDROID_GRADLE_PLUGIN_VERSION
	if (agpVersion.tokenize('.')[0].toInteger() >= 7) {
		namespace javaPackageName
	}
	if (agpVersion.tokenize('.')[0].toInteger() >= 8) {
		buildFeatures {
			buildConfig = true
		}
	}
	
	compileSdkVersion getExtOrDefault('compileSdkVersion')

	if (rootProject.hasProperty("ndkPath")) {
		ndkPath rootProject.ext.ndkPath
	}
	if (rootProject.hasProperty("ndkVersion")) {
		ndkVersion rootProject.ext.ndkVersion
	}

	defaultConfig {
		minSdkVersion getExtOrDefault('minSdkVersion')
		targetSdkVersion getExtOrDefault('targetSdkVersion')
		buildConfigField "boolean", "IS_NEW_ARCHITECTURE_ENABLED", isNewArchitectureEnabled().toString()
	}

	lintOptions {
		disable "GradleCompatible"
	}

	compileOptions {
		sourceCompatibility JavaVersion.VERSION_1_8
		targetCompatibility JavaVersion.VERSION_1_8
	}

	sourceSets {
		main {
			if (isNewArchitectureEnabled()) {
				java.srcDirs += [
					"src/archnew",
					// This is needed to build Kotlin project with NewArch enabled
					"${project.buildDir}/generated/source/codegen/java"
				]
			} else {
				java.srcDirs += ['src/archold']
			}
		}
	}
}

repositories {
	mavenCentral()
	google()
}

dependencies {
	implementation "com.facebook.react:react-native:+"
	implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}

if (isNewArchitectureEnabled()) {
	react {
		jsRootDir = file("../src/")
		libraryName = "RNAndroidFinish"
		codegenJavaPackageName = javaPackageName
	}
}